module id (
    input [7:0] rom_data,
    output reg [7:0] instr,
    output reg rst;
);
always @(rom_data)
begin
    case(rom_data)
        4'd0: // not
        4'd1: // xor
        4'd2: // or
        4'd3: // and
        4'd4: // sub
        4'd5: // add
        4'd6: // rr
        4'd7: // rl
        4'd8: // dec
        4'd9: // inc
        4'd10: // ld
        4'd11: // st
        4'd12: // nop
        4'd13: // nop
        4'd14: // rst
        4'd15: //rst
        default:// rst
    endcase
end

endmodule